// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int            @id @default(autoincrement())
  email             String         @unique
  name              String
  password          String
  profilePic        String?        @default("https://res.cloudinary.com/di8xlgpwr/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/v1731006003/cld-sample.jpg")
  resetToken        String?
  resetTokenExpires DateTime?
  role              String?        @default("user")
  loggedOut         Boolean        @default(false)
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  appointments      Appointment[]
  prescriptions     Prescription[]
}

model Doctor {
  id             Int            @id @default(autoincrement())
  name           String
  email          String         @default("doctor@medlink.com")
  password       String         @default("doctor123")
  specialization String         @default("General")
  profilePic     String?        @default("https://res.cloudinary.com/di8xlgpwr/image/upload/w_1000,c_fill,ar_1:1,g_auto,r_max,bo_5px_solid_red,b_rgb:262c35/v1731006003/cld-sample.jpg")
  description    String         @db.VarChar(200)
  status         String         @default("available")
  appointments   Appointment[]
  prescriptions  Prescription[]
}

model Appointment {
  id           Int           @id @default(autoincrement())
  userId       Int
  doctorId     Int
  date         DateTime
  prescription Prescription?

  user   User   @relation(fields: [userId], references: [id])
  doctor Doctor @relation(fields: [doctorId], references: [id])
}

model Prescription {
  id            Int      @id @default(autoincrement())
  patientId     Int
  doctorId      Int
  appointmentId Int      @unique
  medication    String?
  dosage        String?
  frequency     String?
  instructions  String?
  prescribedAt  DateTime @default(now())
  duration      String?

  patient     User        @relation(fields: [patientId], references: [id])
  doctor      Doctor      @relation(fields: [doctorId], references: [id])
  appointment Appointment @relation(fields: [appointmentId], references: [id])
}
